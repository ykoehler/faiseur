#!/bin/bash
# Faiseur Pre-Commit Hook
# Runs verification checks before allowing commits
# 
# This script ensures code quality by running:
# 1. flutter format check
# 2. flutter analyze (linting)
# 3. flutter test (unit tests)
#
# Install: cp .githooks/pre-commit .git/hooks/pre-commit && chmod +x .git/hooks/pre-commit
# Test: git commit --no-verify to skip hooks

set -e

echo "üîç Running Faiseur pre-commit verification..."
echo ""

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Track if any checks failed
FAILED=0

# ============================================================================
# 1. CHECK FORMATTING
# ============================================================================
echo "üìã Checking code formatting..."
if dart format --set-exit-if-changed --line-length 80 lib/ test/ integration_test/ > /dev/null 2>&1; then
  echo -e "${GREEN}‚úì${NC} Code formatting is correct"
else
  echo -e "${YELLOW}‚ö† Code formatting issues found${NC}"
  echo "  Run: dart format lib/ test/ integration_test/"
  FAILED=1
fi

echo ""

# ============================================================================
# 2. RUN LINTING
# ============================================================================
echo "üîé Running linting analysis..."
if flutter analyze --no-pub 2>/dev/null | grep -q "No issues found"; then
  echo -e "${GREEN}‚úì${NC} No linting issues found"
else
  echo -e "${RED}‚úó${NC} Linting issues found:"
  flutter analyze --no-pub | grep -E "info|warning|error" | head -20
  echo ""
  FAILED=1
fi

echo ""

# ============================================================================
# 3. RUN UNIT TESTS
# ============================================================================
echo "üß™ Running unit tests..."
if flutter test test/core/constants/enums_test.dart --reporter json 2>/dev/null | grep -q '"success":true'; then
  echo -e "${GREEN}‚úì${NC} All unit tests passed"
else
  echo -e "${YELLOW}‚ö†${NC} Some tests may have issues"
  flutter test test/core/constants/enums_test.dart 2>&1 | tail -10
  FAILED=1
fi

echo ""

# ============================================================================
# SUMMARY
# ============================================================================
if [ $FAILED -eq 0 ]; then
  echo -e "${GREEN}‚úÖ All pre-commit checks passed!${NC}"
  echo "üöÄ Ready to commit"
  exit 0
else
  echo -e "${RED}‚ùå Pre-commit verification failed${NC}"
  echo ""
  echo "Fix the issues above and try again."
  echo "To skip checks (not recommended): git commit --no-verify"
  echo ""
  exit 1
fi
