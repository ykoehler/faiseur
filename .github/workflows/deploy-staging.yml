# Deployment Workflow - Staging (from develop branch)
# Deploys to Firebase Hosting (staging) when PR is merged to develop

name: Deploy to Staging

on:
  push:
    branches: [ develop ]
    paths:
      - 'lib/**'
      - 'web/**'
      - 'pubspec.yaml'
      - '.github/workflows/**'

env:
  FLUTTER_VERSION: '3.24.0'

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment:
      name: staging
      url: https://staging.faiseur.app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Run build_runner
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Create staging Firebase options
        run: |
          mkdir -p lib
          echo '${{ secrets.FIREBASE_OPTIONS_STAGING }}' > lib/firebase_options.dart

      - name: Build web for staging
        run: flutter build web --release --dart-define=FLAVOR=staging

      - name: Deploy to Firebase Hosting (Staging)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_STAGING }}
          channelId: live
          projectId: ${{ secrets.FIREBASE_PROJECT_ID_STAGING }}

      - name: Send Slack notification
        if: always()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          payload: |
            {
              "text": "Staging Deployment ${{ job.status }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "ðŸš€ *Staging Deployment* - ${{ job.status }}\n*Branch:* develop\n*Commit:* ${{ github.sha }}\n*URL:* https://staging.faiseur.app"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  notify-team:
    name: Notify Team
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: success()

    steps:
      - name: Create deployment summary
        run: |
          echo "## ðŸš€ Staging Deployment Successful" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** Staging" >> $GITHUB_STEP_SUMMARY
          echo "**URL:** https://staging.faiseur.app" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** develop" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Deployed by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
